name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Continuous Integration job
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build the backend image
    - name: Build backend image
      run: |
        docker build -f api/Dockerfile -t alexandrebo/3-tier-application-backend:latest ./api

    # Build the frontend image
    - name: Build frontend image
      run: |
        docker build -f ui/Dockerfile -t alexandrebo/3-tier-application-frontend:latest ./ui

    # Push the images to DockerHub
    - name: Push backend image to DockerHub
      run: |
        docker push alexandrebo/3-tier-application-backend:latest

    - name: Push frontend image to DockerHub
      run: |
        docker push alexandrebo/3-tier-application-frontend:latest

         # Continuous Delivery job
  
  deploy:
    needs: build
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up SSH to EC2
    - name: Set up SSH
      uses: appleboy/ssh-action@v0.1.1
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

    # Save the private key and use it for SCP
    - name: Save SSH private key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa

    # Ensure Docker is installed on the EC2 machine
    - name: Ensure Docker is installed on EC2
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Check if Docker is installed, if not, install it
          docker -v || (sudo apt-get update -y && sudo apt-get install -y docker.io && sudo systemctl start docker && sudo systemctl enable docker)

          # Check if Docker Compose is installed, if not, install it
          docker-compose -v || (sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose)
        EOF
        
    # Transfer docker-compose.yml to EC2
    - name: Copy docker-compose.yml to EC2
      run: |
        scp -i ~/.ssh/id_rsa docker-compose.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/docker-compose.yml

     # Run Docker Compose on EC2 to pull and start the containers
    - name: Run Docker Compose on EC2
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/${{ secrets.EC2_USERNAME }}
          docker-compose up -d
        EOF